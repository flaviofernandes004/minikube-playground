apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    component: grafana
  name: grafana-claim
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: grafana
  name: grafana-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      component: grafana
  template:
    metadata:
      labels:
        component: grafana
    spec:
      volumes:
      - name: grafana-claim
        persistentVolumeClaim:
          claimName: grafana-claim
      containers:
      - name: grafana
        image: grafana/grafana
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
        resources:
          limits:
            cpu: 500m
            memory: 2500Mi
          requests:
            cpu: 100m
            memory: 100Mi
        # livenessProbe:
        #   exec:
        #     command:
        #       - wget 
        #       - localhost:3000
        #       - --spider
        #   initialDelaySeconds: 30
        #   periodSeconds: 30
        # readinessProbe:
        #   exec:
        #     command:
        #       - wget 
        #       - localhost:3000
        #       - --spider
          # initialDelaySeconds: 120
          # periodSeconds: 5
        volumeMounts:
        - mountPath: /var/lib/grafana
          name: grafana-claim
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: default
  annotations:
      prometheus.io/scrape: 'true'
      prometheus.io/path:   /metrics
      prometheus.io/port:   '3000'
spec:
  type: LoadBalancer
  selector:
    component: grafana
  ports:
  - port: 3000
    targetPort: 3000
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata: 
  name: grafana-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    prometheus.io/scrape: 'true'
    prometheus.io/path:   /metrics
    prometheus.io/port:   '80'
spec:
  rules:
    - http:
        paths: 
          - backend: 
              serviceName: grafana
              servicePort: 3000